<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="396,924" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:moie="clr-namespace:Microsoft.Office.Interop.Excel;assembly=UiPath.Excel" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="376,824" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="C:\Users\Pooja Vaidya\Desktop\VMWare\Input Files\Phase 1-Buy sell Automation New.xlsx" Name="CopyFileFrom" />
      <Variable x:TypeArguments="x:String" Default="[&quot;C:\Users\Pooja Vaidya\Desktop\VMWare\&quot;+Today.ToString(&quot;dd-MM-yyyy&quot;)+&quot;\Master list UK_P0&quot;+&quot;10&quot;+&quot;-20 _New Format.xlsx&quot;]" Name="CopyFileTo" />
      <Variable x:TypeArguments="x:String" Name="BeginingHeader" />
      <Variable x:TypeArguments="x:String" Name="EndingHearder" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_begining" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\Pooja Vaidya\Desktop\VMWare\Input Files\Multi Ageing P09.xlsx" Name="MultiAgeingFile" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[CopyFileTo]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[CopyFileFrom]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CopyFile>
    <ui:CommentOut DisplayName="Comment Out - Excel code by using activity - optional" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_8">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="476,143" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[CopyFileTo]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Sequence - To copy data from Ending to Begging sheet" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_1" Result="[BeginingHeader]" SheetName="Begining Ageing" Value="Customer Name" />
                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_2" Result="[EndingHearder]" SheetName="Ending Ageing(Buy Sell)" Value="Customer Name" />
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_begining]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="[EndingHearder]" SheetName="Ending Ageing(Buy Sell)" />
                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_begining]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Begining Ageing" StartingCell="[BeginingHeader]" />
                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_2" Range="[EndingHearder+&quot;:AZ&quot;+dt_begining.Rows.Count.ToString]" SheetName="Ending Ageing(Buy Sell)" ShiftCells="False" ShiftOption="ShiftUp" />
                  </Sequence>
                  <Sequence DisplayName="Sequence - To delete data of AR Movement sheet" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="ARMovHeader" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_3" Result="[ARMovHeader]" SheetName="AR Movement" Value="Invoice Date" />
                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_3" Range="[ARMovHeader+&quot;:F&quot;]" SheetName="AR Movement" ShiftCells="False" ShiftOption="ShiftUp" />
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Console.WriteLine(&quot;In Vb code&quot;)&#xD;&#xA;App = New Microsoft.Office.Interop.Excel.ApplicationClass&#xD;&#xA;Workbook = App.Workbooks.Open(File.Trim)&#xD;&#xA;BegWorksheet = CType(Workbook.Worksheets(BegSheet.Trim),Microsoft.Office.Interop.Excel.Worksheet)&#xD;&#xA;EndWorksheet = CType(Workbook.Worksheets(EndSheet.Trim),Microsoft.Office.Interop.Excel.Worksheet)&#xD;&#xA;ARMovWorksheet = CType(Workbook.Worksheets(ARMovSheet.Trim),Microsoft.Office.Interop.Excel.Worksheet) &#xD;&#xA;BillWorksheet = CType(Workbook.Worksheets(BillSheet.Trim),Microsoft.Office.Interop.Excel.Worksheet) &#xD;&#xA;App.Visible=True&#xD;&#xA;&#xD;&#xA;'-----------------------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;Dim LastRow As Integer&#xD;&#xA;Dim BegInd As Integer&#xD;&#xA;Dim EndInd As Integer&#xD;&#xA;Dim EndLastRow As Integer&#xD;&#xA;Dim ARMovInd As Integer&#xD;&#xA;Dim ARMovLastRow As Integer&#xD;&#xA;Dim ARMInvoiceInd As String&#xD;&#xA;Dim BegInvoice As String&#xD;&#xA;Dim BegInvoiceNo As String&#xD;&#xA;Dim ARMInvoiceNo As String&#xD;&#xA;Dim BegCurrency As String&#xD;&#xA;Dim ARMCurrency As String&#xD;&#xA;Dim BegCustName As String&#xD;&#xA;Dim ARMCustName As String&#xD;&#xA;Dim BegCustNo As String&#xD;&#xA;Dim ARMCustNo As String&#xD;&#xA;Dim BegTxtAmt As String&#xD;&#xA;Dim ARMTxtAmt As String&#xD;&#xA;Dim BegRange As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;Dim NewArmRange As String&#xD;&#xA;&#xD;&#xA;Dim BillInvoiceDate As String&#xD;&#xA;Dim BillInvoiceNo As String&#xD;&#xA;Dim BillCurrency As String&#xD;&#xA;Dim BillCustName As String&#xD;&#xA;Dim BillCustNo As String&#xD;&#xA;Dim BillTxtAmt As String&#xD;&#xA;&#xD;&#xA;'-------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;'To find Cell number of Customer Name&#xD;&#xA;BegInd = BegWorksheet.UsedRange.Find(&quot;Customer Name&quot;).Row+1&#xD;&#xA;EndInd = EndWorksheet.UsedRange.Find(&quot;Customer Name&quot;).Row+1&#xD;&#xA;Console.WriteLine(&quot;BegIND&quot;+BegInd.ToString)&#xD;&#xA;Console.WriteLine(&quot;EndIND&quot;+EndInd.ToString)&#xD;&#xA;&#xD;&#xA;'------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;'To find Cell number of Invoice Date in AR Movement sheet&#xD;&#xA;ARMovInd = ARMovWorksheet.UsedRange.Find(&quot;Invoice Date&quot;).Row+1&#xD;&#xA;&#xD;&#xA;'Find the cell for Invoice Date, Invoice Number,Currency,Customer Name,Customer Number,Transactional Currency in AR Movement sheet&#xD;&#xA;ARMInvoiceInd = ARMovWorksheet.UsedRange.Find(&quot;Invoice Date&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Date Cell in AR Movement sheet&quot;+ARMInvoiceInd)&#xD;&#xA;ARMInvoiceNo = ARMovWorksheet.UsedRange.Find(&quot;Invoice  Number&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Number Cell in AR Movement sheet&quot;+ARMInvoiceNo)&#xD;&#xA;ARMCurrency = ARMovWorksheet.UsedRange.Find(&quot;Currency&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Currency Cell in AR Movement sheet&quot;+ARMCurrency)&#xD;&#xA;ARMCustName = ARMovWorksheet.UsedRange.Find(&quot;Bill to Customer Name&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Customer Name Cell in AR Movement sheet&quot;+ARMCustName)&#xD;&#xA;ARMCustNo = ARMovWorksheet.UsedRange.Find(&quot;Bill to Customer No&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Customer Number Cell in AR Movement sheet&quot;+ARMCustNo)&#xD;&#xA;'ARMTxtAmt = ARMovWorksheet.UsedRange.Find(&quot;Total in transactional currency&quot;).Address.ToString.Replace(&quot;$&quot;,&quot;&quot;).Trim&#xD;&#xA;ARMTxtAmt = ARMovWorksheet.UsedRange.Find(&quot;Total in transactional currency&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Customer Number Cell in AR Movement sheet&quot;+ARMTxtAmt)&#xD;&#xA;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;'Find cell for Invoice Date, Invoice Number,Customer Name,Customer Number,Amount Due in Begining sheet&#xD;&#xA;BegInvoice = BegWorksheet.UsedRange.Find(&quot;Invoice Date&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Date Cell no. in Begining sheet&quot;+BegInvoice)&#xD;&#xA;&#xD;&#xA;'Create range for Begining sheet&#xD;&#xA;BegRange = BegWorksheet.Range(BegInvoice.Replace(&quot;$&quot;,&quot;&quot;).Trim)&#xD;&#xA;&#xD;&#xA;BegInvoiceNo = BegRange.Find(&quot;Invoice  Number&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Number Cell no. in Begining sheet&quot;+BegInvoiceNo)&#xD;&#xA;BegCurrency = BegRange.Find(&quot;Currency&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Number Cell no. in Begining sheet&quot;+BegCurrency)&#xD;&#xA;BegCustName = BegRange.Find(&quot;Customer Name&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Number Cell no. in Begining sheet&quot;+BegCustName)&#xD;&#xA;BegCustNo = BegRange.Find(&quot;Customer Number&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Number Cell no. in Begining sheet&quot;+BegCustNo)&#xD;&#xA;BegTxtAmt = BegRange.Find(&quot;Amount Due&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Number Cell no. in Begining sheet&quot;+BegTxtAmt)&#xD;&#xA;'--------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Find cell for Invoice Date, Invoice Number,Customer Name,Customer Number,Amount Due in Billing sheet&#xD;&#xA;&#xD;&#xA;BillInvoiceDate = BillWorksheet.UsedRange.Find(&quot;Invoice Date&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice Date Cell no. in Billing sheet&quot;+BillInvoiceDate)&#xD;&#xA;BillInvoiceNo = BillWorksheet.UsedRange.Find(&quot;Transaction Number&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Invoice/Transaction Number Cell no. in Billing sheet&quot;+BillInvoiceNo)&#xD;&#xA;BillCurrency = BillWorksheet.UsedRange.Find(&quot;Invoice Currency &quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Currency Cell no. in Billing sheet&quot;+BillCurrency)&#xD;&#xA;BillCustName = BillWorksheet.UsedRange.Find(&quot;Bill to Customer Name&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Customer Name Cell no. in Billing sheet&quot;+BillCustName)&#xD;&#xA;BillCustNo = BillWorksheet.UsedRange.Find(&quot;Bill to Customer No&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Customer Number Cell no. in Billing sheet&quot;+BillCustNo)&#xD;&#xA;BillTxtAmt = BillWorksheet.UsedRange.Find(&quot;Gross amount of sale in transactional currency&quot;).Address.ToString&#xD;&#xA;Console.WriteLine(&quot;Transaction currency Cell no. in Billing sheet&quot;+BillTxtAmt)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;Dim test As Integer&#xD;&#xA;test = CInt(BegTxtAmt.Split(&quot;$&quot;c)(2))+1&#xD;&#xA;Dim test2 As Integer&#xD;&#xA;test2 = CInt(ARMTxtAmt.Split(&quot;$&quot;c)(2))+1&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'To find total rows&#xD;&#xA;LastRow = BegWorksheet.UsedRange.Rows.Count&#xD;&#xA;Console.WriteLine(&quot;Beg&quot;+LastRow.ToString)&#xD;&#xA;EndLastRow = EndWorksheet.UsedRange.Rows.Count&#xD;&#xA;Console.WriteLine(&quot;End&quot;+EndLastRow.ToString)&#xD;&#xA;ARMovLastRow = ARMovWorksheet.UsedRange.Rows.Count&#xD;&#xA;Console.WriteLine(&quot;ArMovement&quot;+ARMovLastRow.ToString)&#xD;&#xA;&#xD;&#xA;'------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;'To delete data from Begining sheet&#xD;&#xA;BegWorksheet.Range(BegInd.ToString+&quot;:&quot;+LastRow.ToString).Delete&#xD;&#xA;&#xD;&#xA;'To copy data from Ending sheet&#xD;&#xA;EndWorksheet.Range(&quot;A&quot;+EndInd.ToString+&quot;:&quot;+&quot;AW&quot;+EndLastRow.ToString).Copy&#xD;&#xA;&#xD;&#xA;'To paste data into Begining sheet&#xD;&#xA;BegWorksheet.Range(&quot;A&quot;+BegInd.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'To delete data of Ending sheet&#xD;&#xA;EndWorksheet.Range(EndInd.ToString+&quot;:&quot;+EndLastRow.ToString).Delete&#xD;&#xA;&#xD;&#xA;'To delete column A to F in AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(&quot;A&quot;+ARMovInd.ToString+&quot;:H&quot;+ARMovLastRow.ToString).ClearContents&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'Dim test As String &#xD;&#xA;'test = ARMInvoiceInd.Split(&quot;$&quot;c)(2)&#xD;&#xA;'Console.WriteLine(test)&#xD;&#xA;&#xD;&#xA;'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Copy Invoice Date column from Begining sheet&#xD;&#xA;BegWorksheet.Range(BegInvoice.Split(&quot;$&quot;c)(1)+(CInt(BegInvoice.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BegInvoice.Split(&quot;$&quot;c)(1)+BegWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Invoice Date into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMInvoiceInd.Split(&quot;$&quot;c)(1)+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Invoice Number column from Begining sheet&#xD;&#xA;BegWorksheet.Range(BegInvoiceNo.Split(&quot;$&quot;c)(1)+(CInt(BegInvoiceNo.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BegInvoiceNo.Split(&quot;$&quot;c)(1)+BegWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Invoice Number into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMInvoiceNo.Split(&quot;$&quot;c)(1)+(CInt(ARMInvoiceNo.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Currency column from Begining sheet&#xD;&#xA;BegWorksheet.Range(BegCurrency.Split(&quot;$&quot;c)(1)+(CInt(BegCurrency.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BegCurrency.Split(&quot;$&quot;c)(1)+BegWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Currency into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMCurrency.Split(&quot;$&quot;c)(1)+(CInt(ARMCurrency.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Customer Name column from Begining sheet&#xD;&#xA;BegWorksheet.Range(BegCustName.Split(&quot;$&quot;c)(1)+(CInt(BegCustName.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BegCustName.Split(&quot;$&quot;c)(1)+BegWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Customer Name into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMCustName.Split(&quot;$&quot;c)(1)+(CInt(ARMCustName.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Customer Number column from Begining sheet&#xD;&#xA;BegWorksheet.Range(BegCustNo.Split(&quot;$&quot;c)(1)+(CInt(BegCustNo.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BegCustNo.Split(&quot;$&quot;c)(1)+BegWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Customer Number into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMCustNo.Split(&quot;$&quot;c)(1)+(CInt(ARMCustNo.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Amount Due column From Begining sheet&#xD;&#xA;BegWorksheet.Range(BegTxtAmt.Split(&quot;$&quot;c)(1)+(CInt(BegTxtAmt.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BegTxtAmt.Split(&quot;$&quot;c)(1)+BegWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Total in transactional currency Into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMTxtAmt.Split(&quot;$&quot;c)(1)+(CInt(ARMTxtAmt.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'------------------------------------------------------------------------------------------------&#xD;&#xA;'Workbook.Save()&#xD;&#xA;'-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;Dim ArmRangLastRow As Integer&#xD;&#xA;'RangLastRow = BegRange.Rows.Count&#xD;&#xA;'ARMovWorksheet.Range(&quot;A&quot; &amp; ARMovWorksheet.Rows.Count).End(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Row&#xD;&#xA;'Console.WriteLine(&quot;----------&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+RangLastRow).ToString)&#xD;&#xA;Console.WriteLine(&quot;****************&quot;+BegWorksheet.Range(&quot;A&quot;+BegWorksheet.UsedRange.Rows.Count.ToString).End(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Address.ToString)&#xD;&#xA;LastRow = CInt(BegWorksheet.Range(&quot;A&quot;+BegWorksheet.UsedRange.Rows.Count.ToString).End(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Address.ToString.Split(&quot;$&quot;c)(2))&#xD;&#xA;Console.WriteLine(&quot;Beging sheet last row&quot;+LastRow.ToString)&#xD;&#xA;Console.WriteLine(&quot;AR mov sheet last row&quot;+((LastRow-CInt(BegInvoice.Split(&quot;$&quot;c)(2)))+CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))).ToString)&#xD;&#xA;&#xD;&#xA;'Calculate last used row range for AR movement sheet&#xD;&#xA;ArmRangLastRow = (LastRow-CInt(BegInvoice.Split(&quot;$&quot;c)(2)))+CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1&#xD;&#xA;&#xD;&#xA;'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Copy Invoice Date column from Billing sheet&#xD;&#xA;BillWorksheet.Range(BillInvoiceDate.Split(&quot;$&quot;c)(1)+(CInt(BillInvoiceDate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BillInvoiceDate.Split(&quot;$&quot;c)(1)+BillWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Invoice Date into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMInvoiceInd.Split(&quot;$&quot;c)(1)+ArmRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Invoice Number column from Billing sheet&#xD;&#xA;BillWorksheet.Range(BillInvoiceNo.Split(&quot;$&quot;c)(1)+(CInt(BillInvoiceNo.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BillInvoiceNo.Split(&quot;$&quot;c)(1)+BillWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Invoice Number into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMInvoiceNo.Split(&quot;$&quot;c)(1)+ArmRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Currency column from Billing sheet&#xD;&#xA;BillWorksheet.Range(BillCurrency.Split(&quot;$&quot;c)(1)+(CInt(BillCurrency.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BillCurrency.Split(&quot;$&quot;c)(1)+BillWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Currency into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMCurrency.Split(&quot;$&quot;c)(1)+ArmRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Customer Name column from Billing sheet&#xD;&#xA;BillWorksheet.Range(BillCustName.Split(&quot;$&quot;c)(1)+(CInt(BillCustName.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BillCustName.Split(&quot;$&quot;c)(1)+BillWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Customer Name into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMCustName.Split(&quot;$&quot;c)(1)+ArmRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Customer Number column from Billing sheet&#xD;&#xA;BillWorksheet.Range(BillCustNo.Split(&quot;$&quot;c)(1)+(CInt(BillCustNo.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BillCustNo.Split(&quot;$&quot;c)(1)+BillWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Customer Number into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMCustNo.Split(&quot;$&quot;c)(1)+ArmRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;&#xD;&#xA;'Copy Transaction Amount column from Billing sheet&#xD;&#xA;BillWorksheet.Range(BillTxtAmt.Split(&quot;$&quot;c)(1)+(CInt(BillTxtAmt.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+BillTxtAmt.Split(&quot;$&quot;c)(1)+BillWorksheet.UsedRange.Rows.Count.ToString).Copy&#xD;&#xA;&#xD;&#xA;'Paste Transaction Amount into AR Movement sheet&#xD;&#xA;ARMovWorksheet.Range(ARMTxtAmt.Split(&quot;$&quot;c)(1)+ArmRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xD;&#xA;'-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;NewArmRange = ARMovWorksheet.Range(&quot;F&quot;+ARMovWorksheet.UsedRange.Rows.Count.ToString).End(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Address.ToString.Split(&quot;$&quot;c)(2)&#xD;&#xA;'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'To delete or add Buy sell&#xD;&#xA;ARMovWorksheet.Range(&quot;G&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:G&quot;+NewArmRange).Value = &quot;Buy Sell&quot;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for column H&#xD;&#xA;ARMovWorksheet.Range(&quot;H&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:H&quot;+NewArmRange).Formula = &quot;=IF(ISERROR(VLOOKUP(B&quot;+ARMovWorksheet.Range(&quot;H&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:H&quot;+NewArmRange).Row.ToString+&quot;,'Ending Ageing(Buy Sell)'!E:O,11,0)),0,(VLOOKUP(B&quot;+ARMovWorksheet.Range(&quot;H&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:H&quot;+NewArmRange).Row.ToString+&quot;,'Ending Ageing(Buy Sell)'!E:O,11,0)))&quot;&#xD;&#xA;'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for Column I&#xD;&#xA;ARMovWorksheet.Range(&quot;I&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:I&quot;+NewArmRange).Formula = &quot;=H&quot;+ARMovWorksheet.Range(&quot;I&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:I&quot;+NewArmRange).Row.ToString+&quot;-F&quot;+ARMovWorksheet.Range(&quot;I&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:I&quot;+NewArmRange).Row.ToString&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for  Column J&#xD;&#xA;ARMovWorksheet.Range(&quot;J&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:J&quot;+NewArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+ARMovWorksheet.Range(&quot;J&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:J&quot;+NewArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!S:S)&quot;&#xD;&#xA;'-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for Column K&#xD;&#xA;ARMovWorksheet.Range(&quot;K&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:K&quot;+NewArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+ARMovWorksheet.Range(&quot;K&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:K&quot;+NewArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!U:U)&quot;&#xD;&#xA;'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula For Column L&#xD;&#xA;ARMovWorksheet.Range(&quot;L&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:L&quot;+NewArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+ARMovWorksheet.Range(&quot;L&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:L&quot;+NewArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!X:X)&quot;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for Column M&#xD;&#xA;ARMovWorksheet.Range(&quot;M&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:M&quot;+NewArmRange).Formula = &quot;=SUM(I&quot;+ARMovWorksheet.Range(&quot;M&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:M&quot;+NewArmRange).Row.ToString+&quot;:L&quot;+ARMovWorksheet.Range(&quot;M&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:M&quot;+NewArmRange).Row.ToString+&quot;)&quot;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for Column N&#xD;&#xA;ARMovWorksheet.Range(&quot;N&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:N&quot;+NewArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+ARMovWorksheet.Range(&quot;N&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:N&quot;+NewArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!V:V)&quot;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for Column O&#xD;&#xA;ARMovWorksheet.Range(&quot;O&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:O&quot;+NewArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+ARMovWorksheet.Range(&quot;O&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:O&quot;+NewArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!W:W)&quot;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for Column P&#xD;&#xA;ARMovWorksheet.Range(&quot;P&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:P&quot;+NewArmRange).Formula = &quot;=SUMIF('buy Sell Opening Cash applicati'!B:B,B&quot;+ARMovWorksheet.Range(&quot;P&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:P&quot;+NewArmRange).Row.ToString+&quot;,'buy Sell Opening Cash applicati'!K:K)&quot;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for Column R&#xD;&#xA;ARMovWorksheet.Range(&quot;R&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:R&quot;+NewArmRange).Formula = &quot;=IFERROR(VLOOKUP(B&quot;+ARMovWorksheet.Range(&quot;R&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:R&quot;+NewArmRange).Row.ToString+&quot;,'buy Sell Opening Cash applicati'!B:K,10,0),0)&quot;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;'Apply Formula for Column U&#xD;&#xA;ARMovWorksheet.Range(&quot;U&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:U&quot;+NewArmRange).Formula = &quot;=SUBTOTAL(9,M&quot;+ARMovWorksheet.Range(&quot;U&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:U&quot;+NewArmRange).Row.ToString+&quot;:T&quot;+ARMovWorksheet.Range(&quot;U&quot;+(CInt(ARMInvoiceInd.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:U&quot;+NewArmRange).Row.ToString+&quot;)&quot;&#xD;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;Workbook.Save()&#xD;&#xA;Workbook.Close()&#xD;&#xA;App.Quit()" DisplayName="Invoke code - Begining and AR Movement sheet manipulation" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="moie:Application" x:Key="App" />
        <InArgument x:TypeArguments="moie:Workbook" x:Key="Workbook" />
        <InArgument x:TypeArguments="moie:Worksheet" x:Key="BegWorksheet" />
        <InArgument x:TypeArguments="moie:Range" x:Key="Range" />
        <InArgument x:TypeArguments="x:String" x:Key="File">[CopyFileTo]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="BegSheet">Begining Ageing</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="EndSheet">Ending Ageing(Buy Sell)</InArgument>
        <InArgument x:TypeArguments="moie:Worksheet" x:Key="EndWorksheet" />
        <InArgument x:TypeArguments="moie:Worksheet" x:Key="ARMovWorksheet" />
        <InArgument x:TypeArguments="x:String" x:Key="ARMovSheet">AR Movement</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="BillSheet">Billing Report</InArgument>
        <InArgument x:TypeArguments="moie:Worksheet" x:Key="BillWorksheet" />
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Console.WriteLine(&quot;In invoke code for Ending sheet processing&quot;)&#xA;App = New Microsoft.Office.Interop.Excel.ApplicationClass&#xA;MainWorkbook = App.Workbooks.Open(MainFile.Trim)&#xA;AgeingWorkbook = App.Workbooks.Open(AgeingFile.Trim)&#xA;EndWorksheet = CType(MainWorkbook.Worksheets(EndSheet.Trim),Microsoft.Office.Interop.Excel.Worksheet)&#xA;AgeingWorkSheet = CType(AgeingWorkbook.Worksheets(AgeingSheet.Trim),Microsoft.Office.Interop.Excel.Worksheet)&#xA;App.Visible = True&#xA;&#xA;Dim EndCustName As String&#xA;Dim AgeCustName As String&#xA;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------&#xA;'Finding Customer Name cell in Ending Ageing sheet &#xA;EndCustName = EndWorkSheet.UsedRange.Find(&quot;Customer Name&quot;).Address.ToString&#xA;'------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Finding Customer Name cell in Multi Ageing File&#xA;AgeCustName = AgeingWorkSheet.UsedRange.Find(&quot;Customer Name&quot;).Address.ToString&#xA;Console.WriteLine(AgeCustName)&#xA;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------&#xA;'Copy data from Multi ageing file&#xA;AgeingWorkSheet.Range(AgeCustName.Split(&quot;$&quot;c)(1)+(CInt(AgeCustName.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:AW&quot;+AgeingWorkSheet.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'-----------------------------------------------------------------------------------------------------------------------------------------&#xA;'Paste data into Ending Ageing Sheet &#xA;EndWorkSheet.Range(EndCustName.Split(&quot;$&quot;c)(1)+(CInt(EndCustName.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;'-------------------------------------------------------------------------------------------------------------------------------------------&#xA;" DisplayName="Invoke code - Ending Ageing sheet manipulation" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="moie:Application" x:Key="App" />
        <InArgument x:TypeArguments="moie:Workbook" x:Key="MainWorkbook" />
        <InArgument x:TypeArguments="x:String" x:Key="EndSheet">Ending Ageing(Buy Sell)</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="MainFile">[CopyFileTo]</InArgument>
        <InArgument x:TypeArguments="moie:Worksheet" x:Key="EndWorkSheet" />
        <InArgument x:TypeArguments="moie:Workbook" x:Key="AgeingWorkbook" />
        <InArgument x:TypeArguments="moie:Worksheet" x:Key="AgeingWorkSheet" />
        <InArgument x:TypeArguments="x:String" x:Key="AgeingFile">[MultiAgeingFile]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="AgeingSheet">FNDWRR</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:CommentOut DisplayName="Comment Out - for test" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_25">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,256" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode Code="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="moie:Application" x:Key="App" />
              <InArgument x:TypeArguments="moie:Workbook" x:Key="MainWorkbook" />
              <InArgument x:TypeArguments="moie:Worksheet" x:Key="MainWorksheet" />
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out - for test" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_24">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,256" sap2010:WorkflowViewState.IdRef="Sequence_28">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="app = New Microsoft.Office.Interop.Excel.ApplicationClass&#xA;wb =app.Workbooks.Open(File.Trim)&#xA;ws =  CType(wb.Worksheets(sheet1.Trim),Microsoft.Office.Interop.Excel.Worksheet)&#xA;ws2 = CType(wb.Worksheets(sheet2.Trim),Microsoft.Office.Interop.Excel.Worksheet)&#xA;app.Visible = True&#xA;&#xA;Dim curr As String&#xA;&#xA;curr = ws.UsedRange.Find(&quot;Customer Name&quot;).Address.ToString.Replace(&quot;$&quot;,&quot;&quot;).Trim&#xA;Console.WriteLine(curr)&#xA;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range&#xA;rng = ws.Range(curr)&#xA;&#xA;Dim test As String&#xA;test = rng.Find(&quot;Currency&quot;).Address.ToString&#xA;Console.WriteLine(test)&#xA;&#xA;'Console.WriteLine(rng.Rows.Count.ToString)&#xA;ws2.Range(&quot;G5027:G5068&quot;).Value=&quot;Buy Sell&quot;&#xA;&#xA;Dim rng1 As String&#xA;&#xA;rng1 = ws2.Range(&quot;:F&quot;+ws2.UsedRange.Rows.Count.ToString).End(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Address.ToString.Split(&quot;$&quot;c)(2)&#xA;rng = ws2.Range(&quot;H15:H&quot;+rng1)&#xA;rng.Formula = &quot;=IF(ISERROR(VLOOKUP(B&quot;+rng.Row.ToString+&quot;,'Ending Ageing(Buy Sell)'!E:O,11,0)),0,(VLOOKUP(B&quot;+rng.Row.ToString+&quot;,'Ending Ageing(Buy Sell)'!E:O,11,0)))&quot;&#xA;console.WriteLine(&quot;&quot;)&#xA;wb.Save()&#xA;wb.Close()&#xA;app.Quit()" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="moie:Application" x:Key="app" />
              <InArgument x:TypeArguments="moie:Worksheet" x:Key="ws" />
              <InArgument x:TypeArguments="moie:Workbook" x:Key="wb" />
              <InArgument x:TypeArguments="x:String" x:Key="sheet1">Begining Ageing</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="File">[CopyFileTo]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="sheet2">AR Movement</InArgument>
              <InArgument x:TypeArguments="moie:Worksheet" x:Key="ws2" />
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>